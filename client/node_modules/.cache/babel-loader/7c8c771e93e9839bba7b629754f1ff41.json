{"ast":null,"code":"var _jsxFileName = \"/home/sergi/Desktop/medeth/client/src/pages/doctor/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Divider, FormControl, Modal, TextField, Typography, Backdrop, CircularProgress } from '@mui/material';\nimport React, { useCallback } from 'react';\nimport { useState } from 'react';\nimport CustomButton from '../../components/CustomButton';\nimport SearchRoundedIcon from '@mui/icons-material/SearchRounded';\nimport useEth from '../../contexts/EthContext/useEth';\nimport PersonAddAlt1RoundedIcon from '@mui/icons-material/PersonAddAlt1Rounded';\nimport useAlert from '../../contexts/AlertContext/useAlert';\nimport AddRecordModal from './AddRecordModal';\nimport CloudUploadRoundedIcon from '@mui/icons-material/CloudUploadRounded';\nimport ipfs from '../../ipfs';\nimport Record from '../../components/Record';\nimport Card from '../../components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Doctor = () => {\n  _s();\n\n  const {\n    state: {\n      contract,\n      accounts,\n      role,\n      loading\n    }\n  } = useEth();\n  const {\n    setAlert\n  } = useAlert();\n  const [patientExist, setPatientExist] = useState(false);\n  const [searchPatientAddress, setSearchPatientAddress] = useState('');\n  const [addPatientAddress, setAddPatientAddress] = useState('');\n  const [records, setRecords] = useState([]);\n  const [addRecord, setAddRecord] = useState(false);\n  const [about, setAbout] = useState(\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\");\n\n  const searchPatient = async () => {\n    try {\n      if (!/^(0x)?[0-9a-f]{40}$/i.test(searchPatientAddress)) {\n        setAlert('Please enter a valid wallet address', 'error');\n        return;\n      }\n\n      const patientExists = await contract.methods.getPatientExists(searchPatientAddress).call({\n        from: accounts[0]\n      });\n\n      if (patientExists) {\n        const records = await contract.methods.getRecords(searchPatientAddress).call({\n          from: accounts[0]\n        });\n        console.log('records :>> ', records);\n        setRecords(records);\n        setPatientExist(true);\n      } else {\n        setAlert('Patient does not exist or address does not match', 'error');\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const registerPatient = async () => {\n    try {\n      await contract.methods.addPatient(addPatientAddress).send({\n        from: accounts[0]\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const addRecordCallback = useCallback(async (buffer, fileName, patientAddress) => {\n    if (!patientAddress) {\n      setAlert('Please search for a patient first', 'error');\n      return;\n    }\n\n    try {\n      const res = await ipfs.add(buffer);\n      const ipfsHash = res[0].hash;\n\n      if (ipfsHash) {\n        await contract.methods.addRecord(ipfsHash, fileName, patientAddress).send({\n          from: accounts[0]\n        });\n        setAlert('New record uploaded', 'success');\n        setAddRecord(false); // refresh records\n\n        const records = await contract.methods.getRecords(patientAddress).call({\n          from: accounts[0]\n        });\n        setRecords(records);\n      }\n    } catch (err) {\n      setAlert('Record upload failed', 'error');\n      console.error(err);\n    }\n  }, [addPatientAddress, accounts, contract]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Backdrop, {\n      sx: {\n        color: '#fff',\n        zIndex: theme => theme.zIndex.drawer + 1\n      },\n      open: loading,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      width: \"100vw\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        width: \"60%\",\n        my: 5,\n        children: !accounts ? /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Open your MetaMask wallet to get connected, then refresh this page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [role === 'unknown' && /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \"You're not registered, please go to home page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), role === 'patient' && /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \"Only doctor can access this page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), role === 'doctor' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Modal, {\n              open: addRecord,\n              onClose: () => setAddRecord(false),\n              children: /*#__PURE__*/_jsxDEV(AddRecordModal, {\n                handleClose: () => setAddRecord(false),\n                handleUpload: addRecordCallback,\n                patientAddress: searchPatientAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: \"Patient Records\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              my: 1,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  placeholder: \"Search patient by wallet address\",\n                  value: searchPatientAddress,\n                  onChange: e => setSearchPatientAddress(e.target.value),\n                  InputProps: {\n                    style: {\n                      fontSize: '15px'\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: '15px'\n                    }\n                  },\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mx: 2,\n                children: /*#__PURE__*/_jsxDEV(CustomButton, {\n                  text: 'Search',\n                  handleClick: () => searchPatient(),\n                  children: /*#__PURE__*/_jsxDEV(SearchRoundedIcon, {\n                    style: {\n                      color: 'white'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n                text: 'New Record',\n                handleClick: () => setAddRecord(true),\n                disabled: !patientExist,\n                children: /*#__PURE__*/_jsxDEV(CloudUploadRoundedIcon, {\n                  style: {\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), patientExist && records.length === 0 && /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              my: 5,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: \"No records found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 21\n            }, this), patientExist && records.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"column\",\n              mt: 3,\n              mb: -2,\n              children: records.map((record, index) => /*#__PURE__*/_jsxDEV(Box, {\n                mb: 2,\n                children: /*#__PURE__*/_jsxDEV(Record, {\n                  record: record\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 6,\n              mb: 4,\n              children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: \"Register Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              my: 1,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  placeholder: \" patient by wallet address\",\n                  value: addPatientAddress,\n                  onChange: e => setAddPatientAddress(e.target.value),\n                  InputProps: {\n                    style: {\n                      fontSize: '15px'\n                    }\n                  },\n                  InputLabelProps: {\n                    style: {\n                      fontSize: '15px'\n                    }\n                  },\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mx: 2,\n                children: /*#__PURE__*/_jsxDEV(CustomButton, {\n                  text: 'Register',\n                  handleClick: () => registerPatient(),\n                  children: /*#__PURE__*/_jsxDEV(PersonAddAlt1RoundedIcon, {\n                    style: {\n                      color: 'white'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                image: 'https://www.eleconomista.com.mx/__export/1650910628068/sites/eleconomista/img/2022/04/25/donald_trump_foto_reuters.png_423682103.png',\n                name: 'Donald Trump',\n                job: 'President',\n                about: about\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Doctor, \"QIMUvqYfXqbRXfdxjJqnugMnnuY=\", false, function () {\n  return [useEth, useAlert];\n});\n\n_c = Doctor;\nexport default Doctor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Doctor\");","map":{"version":3,"names":["Box","Divider","FormControl","Modal","TextField","Typography","Backdrop","CircularProgress","React","useCallback","useState","CustomButton","SearchRoundedIcon","useEth","PersonAddAlt1RoundedIcon","useAlert","AddRecordModal","CloudUploadRoundedIcon","ipfs","Record","Card","Doctor","state","contract","accounts","role","loading","setAlert","patientExist","setPatientExist","searchPatientAddress","setSearchPatientAddress","addPatientAddress","setAddPatientAddress","records","setRecords","addRecord","setAddRecord","about","setAbout","searchPatient","test","patientExists","methods","getPatientExists","call","from","getRecords","console","log","err","error","registerPatient","addPatient","send","addRecordCallback","buffer","fileName","patientAddress","res","add","ipfsHash","hash","color","zIndex","theme","drawer","e","target","value","style","fontSize","length","map","record","index"],"sources":["/home/sergi/Desktop/medeth/client/src/pages/doctor/index.jsx"],"sourcesContent":["import { Box, Divider, FormControl, Modal, TextField, Typography, Backdrop, CircularProgress } from '@mui/material'\nimport React, { useCallback } from 'react'\nimport { useState } from 'react'\nimport CustomButton from '../../components/CustomButton'\nimport SearchRoundedIcon from '@mui/icons-material/SearchRounded'\nimport useEth from '../../contexts/EthContext/useEth'\nimport PersonAddAlt1RoundedIcon from '@mui/icons-material/PersonAddAlt1Rounded'\nimport useAlert from '../../contexts/AlertContext/useAlert'\nimport AddRecordModal from './AddRecordModal'\nimport CloudUploadRoundedIcon from '@mui/icons-material/CloudUploadRounded'\nimport ipfs from '../../ipfs'\nimport Record from '../../components/Record'\nimport Card from '../../components/Card'\n\nconst Doctor = () => {\n  const {\n    state: { contract, accounts, role, loading },\n  } = useEth()\n  const { setAlert } = useAlert()\n\n  const [patientExist, setPatientExist] = useState(false)\n  const [searchPatientAddress, setSearchPatientAddress] = useState('')\n  const [addPatientAddress, setAddPatientAddress] = useState('')\n  const [records, setRecords] = useState([])\n  const [addRecord, setAddRecord] = useState(false)\n  const [about,setAbout ] = useState(\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\");\n\n  const searchPatient = async () => {\n    try {\n      if (!/^(0x)?[0-9a-f]{40}$/i.test(searchPatientAddress)) {\n        setAlert('Please enter a valid wallet address', 'error')\n        return\n      }\n      const patientExists = await contract.methods.getPatientExists(searchPatientAddress).call({ from: accounts[0] })\n      if (patientExists) {\n        const records = await contract.methods.getRecords(searchPatientAddress).call({ from: accounts[0] })\n        console.log('records :>> ', records)\n        setRecords(records)\n        setPatientExist(true)\n      } else {\n        setAlert('Patient does not exist or address does not match', 'error')\n      }\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const registerPatient = async () => {\n    try {\n      await contract.methods.addPatient(addPatientAddress).send({ from: accounts[0] })\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const addRecordCallback = useCallback(\n    async (buffer, fileName, patientAddress) => {\n      if (!patientAddress) {\n        setAlert('Please search for a patient first', 'error')\n        return\n      }\n      try {\n        const res = await ipfs.add(buffer)\n        const ipfsHash = res[0].hash\n        if (ipfsHash) {\n          await contract.methods.addRecord(ipfsHash, fileName, patientAddress).send({ from: accounts[0] })\n          setAlert('New record uploaded', 'success')\n          setAddRecord(false)\n\n          // refresh records\n          const records = await contract.methods.getRecords(patientAddress).call({ from: accounts[0] })\n          setRecords(records)\n        }\n      } catch (err) {\n        setAlert('Record upload failed', 'error')\n        console.error(err)\n      }\n    },\n    [addPatientAddress, accounts, contract]\n  )\n\n  if (loading) {\n    return (\n      <Backdrop sx={{ color: '#fff', zIndex: theme => theme.zIndex.drawer + 1 }} open={loading}>\n        <CircularProgress color='inherit' />\n      </Backdrop>\n    )\n  } else {\n    return (\n      <Box display='flex' justifyContent='center' width='100vw'>\n        <Box width='60%' my={5}>\n          {!accounts ? (\n            <Box display='flex' justifyContent='center'>\n              <Typography variant='h6'>Open your MetaMask wallet to get connected, then refresh this page</Typography>\n            </Box>\n          ) : (\n            <>\n              {role === 'unknown' && (\n                <Box display='flex' justifyContent='center'>\n                  <Typography variant='h5'>You're not registered, please go to home page</Typography>\n                </Box>\n              )}\n              {role === 'patient' && (\n                <Box display='flex' justifyContent='center'>\n                  <Typography variant='h5'>Only doctor can access this page</Typography>\n                </Box>\n              )}\n              {role === 'doctor' && (\n                <>\n                  <Modal open={addRecord} onClose={() => setAddRecord(false)}>\n                    <AddRecordModal\n                      handleClose={() => setAddRecord(false)}\n                      handleUpload={addRecordCallback}\n                      patientAddress={searchPatientAddress}\n                    />\n                  </Modal>\n\n                  <Typography variant='h4'>Patient Records</Typography>\n                  <Box display='flex' alignItems='center' my={1}>\n                    <FormControl fullWidth>\n                      <TextField\n                        variant='outlined'\n                        placeholder='Search patient by wallet address'\n                        value={searchPatientAddress}\n                        onChange={e => setSearchPatientAddress(e.target.value)}\n                        InputProps={{ style: { fontSize: '15px' } }}\n                        InputLabelProps={{ style: { fontSize: '15px' } }}\n                        size='small'\n                      />\n                    </FormControl>\n                    <Box mx={2}>\n                      <CustomButton text={'Search'} handleClick={() => searchPatient()}>\n                        <SearchRoundedIcon style={{ color: 'white' }} />\n                      </CustomButton>\n                    </Box>\n                    <CustomButton text={'New Record'} handleClick={() => setAddRecord(true)} disabled={!patientExist}>\n                      <CloudUploadRoundedIcon style={{ color: 'white' }} />\n                    </CustomButton>\n                  </Box>\n\n                  {patientExist && records.length === 0 && (\n                    <Box display='flex' alignItems='center' justifyContent='center' my={5}>\n                      <Typography variant='h5'>No records found</Typography>\n                    </Box>\n                  )}\n\n                  {patientExist && records.length > 0 && (\n                    <Box display='flex' flexDirection='column' mt={3} mb={-2}>\n                      {records.map((record, index) => (\n                        <Box mb={2}>\n                          <Record key={index} record={record} />\n                        </Box>\n                      ))}\n                    </Box>\n                  )}\n\n                  <Box mt={6} mb={4}>\n                    <Divider />\n                  </Box>\n\n                  <Typography variant='h4'>Register Patient</Typography>\n                  <Box display='flex' alignItems='center' my={1}>\n                    <FormControl fullWidth>\n                      <TextField\n                        variant='outlined'\n                        placeholder=' patient by wallet address'\n                        value={addPatientAddress}\n                        onChange={e => setAddPatientAddress(e.target.value)}\n                        InputProps={{ style: { fontSize: '15px' } }}\n                        InputLabelProps={{ style: { fontSize: '15px' } }}\n                        size='small'\n                      />\n                    </FormControl>\n                    <Box mx={2}>\n                      <CustomButton text={'Register'} handleClick={() => registerPatient()}>\n                        <PersonAddAlt1RoundedIcon style={{ color: 'white' }} />\n                      </CustomButton>\n                    </Box>\n                  </Box>\n                  <Box display='flex' justifyContent='center' alignItems='center'>\n                    <Card image={'https://www.eleconomista.com.mx/__export/1650910628068/sites/eleconomista/img/2022/04/25/donald_trump_foto_reuters.png_423682103.png'} name={'Donald Trump'} job={'President'} about={about}/>\n                  </Box>\n                </>\n              )}\n            </>\n          )}\n        </Box>\n      </Box>\n    )\n  }\n}\n\nexport default Doctor\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}