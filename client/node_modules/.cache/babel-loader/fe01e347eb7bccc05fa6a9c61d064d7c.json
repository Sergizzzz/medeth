{"ast":null,"code":"const ipfsClient = require('ipfs-http-client');\n\nconst projectId = 'dba25c5fb09a4f90ae9ed55646752f2d';\nconst projectSecret = 'c5d0fcf2fc964dbcbcfaa0a6ad106c9b';\nconst auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\nconst ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https',\n  headers: {\n    authorization: auth\n  }\n});\nexport default ipfs;","map":{"version":3,"names":["ipfsClient","require","projectId","projectSecret","auth","Buffer","from","toString","ipfs","host","port","protocol","headers","authorization"],"sources":["/home/sergi/Desktop/crypthospital/client/src/ipfs.js"],"sourcesContent":["const ipfsClient = require('ipfs-http-client')\n\nconst projectId = 'dba25c5fb09a4f90ae9ed55646752f2d'\nconst projectSecret = 'c5d0fcf2fc964dbcbcfaa0a6ad106c9b'\nconst auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64')\n\nconst ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https',\n  headers: {\n    authorization: auth,\n  },\n})\n\nexport default ipfs\n"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,kBAAD,CAA1B;;AAEA,MAAMC,SAAS,GAAG,kCAAlB;AACA,MAAMC,aAAa,GAAG,kCAAtB;AACA,MAAMC,IAAI,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYJ,SAAS,GAAG,GAAZ,GAAkBC,aAA9B,EAA6CI,QAA7C,CAAsD,QAAtD,CAAxB;AAEA,MAAMC,IAAI,GAAGR,UAAU,CAAC;EACtBS,IAAI,EAAE,gBADgB;EAEtBC,IAAI,EAAE,IAFgB;EAGtBC,QAAQ,EAAE,OAHY;EAItBC,OAAO,EAAE;IACPC,aAAa,EAAET;EADR;AAJa,CAAD,CAAvB;AASA,eAAeI,IAAf"},"metadata":{},"sourceType":"module"}