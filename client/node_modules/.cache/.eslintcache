[{"/home/sergi/Desktop/examples/med-chain-master/client/src/index.js":"1","/home/sergi/Desktop/examples/med-chain-master/client/src/App.jsx":"2","/home/sergi/Desktop/examples/med-chain-master/client/src/routes.js":"3","/home/sergi/Desktop/examples/med-chain-master/client/src/contexts/AlertContext/AlertContext.js":"4","/home/sergi/Desktop/examples/med-chain-master/client/src/contexts/EthContext/index.js":"5","/home/sergi/Desktop/examples/med-chain-master/client/src/components/layouts/Layout.jsx":"6","/home/sergi/Desktop/examples/med-chain-master/client/src/components/layouts/AlertPopup.jsx":"7","/home/sergi/Desktop/examples/med-chain-master/client/src/contexts/EthContext/EthContext.js":"8","/home/sergi/Desktop/examples/med-chain-master/client/src/contexts/EthContext/useEth.js":"9","/home/sergi/Desktop/examples/med-chain-master/client/src/contexts/EthContext/state.js":"10","/home/sergi/Desktop/examples/med-chain-master/client/src/pages/index.jsx":"11","/home/sergi/Desktop/examples/med-chain-master/client/src/pages/patient/index.jsx":"12","/home/sergi/Desktop/examples/med-chain-master/client/src/pages/doctor/index.jsx":"13","/home/sergi/Desktop/examples/med-chain-master/client/src/contexts/EthContext/EthProvider.jsx":"14","/home/sergi/Desktop/examples/med-chain-master/client/src/contexts/AlertContext/useAlert.js":"15","/home/sergi/Desktop/examples/med-chain-master/client/src/ipfs.js":"16","/home/sergi/Desktop/examples/med-chain-master/client/src/components/CustomButton.jsx":"17","/home/sergi/Desktop/examples/med-chain-master/client/src/components/Record.jsx":"18","/home/sergi/Desktop/examples/med-chain-master/client/src/pages/doctor/AddRecordModal.jsx":"19","/home/sergi/Desktop/crypthospital/client/src/index.js":"20","/home/sergi/Desktop/crypthospital/client/src/App.jsx":"21","/home/sergi/Desktop/crypthospital/client/src/routes.js":"22","/home/sergi/Desktop/crypthospital/client/src/contexts/AlertContext/AlertContext.js":"23","/home/sergi/Desktop/crypthospital/client/src/contexts/EthContext/index.js":"24","/home/sergi/Desktop/crypthospital/client/src/components/layouts/AlertPopup.jsx":"25","/home/sergi/Desktop/crypthospital/client/src/components/layouts/Layout.jsx":"26","/home/sergi/Desktop/crypthospital/client/src/contexts/EthContext/EthContext.js":"27","/home/sergi/Desktop/crypthospital/client/src/contexts/EthContext/useEth.js":"28","/home/sergi/Desktop/crypthospital/client/src/contexts/EthContext/state.js":"29","/home/sergi/Desktop/crypthospital/client/src/pages/index.jsx":"30","/home/sergi/Desktop/crypthospital/client/src/pages/patient/index.jsx":"31","/home/sergi/Desktop/crypthospital/client/src/pages/doctor/index.jsx":"32","/home/sergi/Desktop/crypthospital/client/src/contexts/EthContext/EthProvider.jsx":"33","/home/sergi/Desktop/crypthospital/client/src/contexts/AlertContext/useAlert.js":"34","/home/sergi/Desktop/crypthospital/client/src/ipfs.js":"35","/home/sergi/Desktop/crypthospital/client/src/components/CustomButton.jsx":"36","/home/sergi/Desktop/crypthospital/client/src/components/Record.jsx":"37","/home/sergi/Desktop/crypthospital/client/src/pages/doctor/AddRecordModal.jsx":"38","/home/sergi/Desktop/crypthospital/client/src/components/UserCard.jsx":"39","/home/sergi/Desktop/medeth/client/src/index.js":"40","/home/sergi/Desktop/medeth/client/src/App.jsx":"41","/home/sergi/Desktop/medeth/client/src/routes.js":"42","/home/sergi/Desktop/medeth/client/src/contexts/AlertContext/AlertContext.js":"43","/home/sergi/Desktop/medeth/client/src/contexts/EthContext/index.js":"44","/home/sergi/Desktop/medeth/client/src/components/layouts/Layout.jsx":"45","/home/sergi/Desktop/medeth/client/src/components/layouts/AlertPopup.jsx":"46","/home/sergi/Desktop/medeth/client/src/contexts/EthContext/EthContext.js":"47","/home/sergi/Desktop/medeth/client/src/contexts/EthContext/useEth.js":"48","/home/sergi/Desktop/medeth/client/src/contexts/EthContext/state.js":"49","/home/sergi/Desktop/medeth/client/src/pages/index.jsx":"50","/home/sergi/Desktop/medeth/client/src/pages/doctor/index.jsx":"51","/home/sergi/Desktop/medeth/client/src/pages/patient/index.jsx":"52","/home/sergi/Desktop/medeth/client/src/contexts/EthContext/EthProvider.jsx":"53","/home/sergi/Desktop/medeth/client/src/contexts/AlertContext/useAlert.js":"54","/home/sergi/Desktop/medeth/client/src/ipfs.js":"55","/home/sergi/Desktop/medeth/client/src/components/CustomButton.jsx":"56","/home/sergi/Desktop/medeth/client/src/pages/doctor/AddRecordModal.jsx":"57","/home/sergi/Desktop/medeth/client/src/components/Record.jsx":"58"},{"size":340,"mtime":1660459080000,"results":"59","hashOfConfig":"60"},{"size":372,"mtime":1666628463034,"results":"61","hashOfConfig":"60"},{"size":868,"mtime":1660459080000,"results":"62","hashOfConfig":"60"},{"size":724,"mtime":1660459080000,"results":"63","hashOfConfig":"60"},{"size":181,"mtime":1660459080000,"results":"64","hashOfConfig":"60"},{"size":1419,"mtime":1660459080000,"results":"65","hashOfConfig":"60"},{"size":757,"mtime":1660459080000,"results":"66","hashOfConfig":"60"},{"size":104,"mtime":1660459080000,"results":"67","hashOfConfig":"60"},{"size":145,"mtime":1660459080000,"results":"68","hashOfConfig":"60"},{"size":556,"mtime":1660459080000,"results":"69","hashOfConfig":"60"},{"size":4311,"mtime":1660459080000,"results":"70","hashOfConfig":"60"},{"size":2916,"mtime":1660459080000,"results":"71","hashOfConfig":"60"},{"size":7413,"mtime":1666518658932,"results":"72","hashOfConfig":"60"},{"size":1832,"mtime":1660459080000,"results":"73","hashOfConfig":"60"},{"size":155,"mtime":1660459080000,"results":"74","hashOfConfig":"60"},{"size":396,"mtime":1660459080000,"results":"75","hashOfConfig":"60"},{"size":598,"mtime":1660459080000,"results":"76","hashOfConfig":"60"},{"size":2024,"mtime":1660459080000,"results":"77","hashOfConfig":"60"},{"size":2432,"mtime":1660459080000,"results":"78","hashOfConfig":"60"},{"size":340,"mtime":1660459080000,"results":"79","hashOfConfig":"80"},{"size":372,"mtime":1666628463034,"results":"81","hashOfConfig":"80"},{"size":868,"mtime":1666884470967,"results":"82","hashOfConfig":"80"},{"size":724,"mtime":1660459080000,"results":"83","hashOfConfig":"80"},{"size":181,"mtime":1660459080000,"results":"84","hashOfConfig":"80"},{"size":757,"mtime":1660459080000,"results":"85","hashOfConfig":"80"},{"size":1415,"mtime":1666804259318,"results":"86","hashOfConfig":"80"},{"size":104,"mtime":1660459080000,"results":"87","hashOfConfig":"80"},{"size":145,"mtime":1660459080000,"results":"88","hashOfConfig":"80"},{"size":556,"mtime":1660459080000,"results":"89","hashOfConfig":"80"},{"size":4616,"mtime":1666885628450,"results":"90","hashOfConfig":"80"},{"size":2916,"mtime":1660459080000,"results":"91","hashOfConfig":"80"},{"size":7439,"mtime":1666864754403,"results":"92","hashOfConfig":"80"},{"size":1832,"mtime":1666631551060,"results":"93","hashOfConfig":"80"},{"size":155,"mtime":1660459080000,"results":"94","hashOfConfig":"80"},{"size":396,"mtime":1666865134532,"results":"95","hashOfConfig":"80"},{"size":598,"mtime":1660459080000,"results":"96","hashOfConfig":"80"},{"size":2024,"mtime":1666865130976,"results":"97","hashOfConfig":"80"},{"size":2432,"mtime":1660459080000,"results":"98","hashOfConfig":"80"},{"size":689,"mtime":1666803695349,"results":"99","hashOfConfig":"80"},{"size":340,"mtime":1660459080000,"results":"100","hashOfConfig":"101"},{"size":372,"mtime":1666628463034,"results":"102","hashOfConfig":"101"},{"size":868,"mtime":1666884470967,"results":"103","hashOfConfig":"101"},{"size":724,"mtime":1660459080000,"results":"104","hashOfConfig":"101"},{"size":181,"mtime":1660459080000,"results":"105","hashOfConfig":"101"},{"size":1415,"mtime":1666804259318,"results":"106","hashOfConfig":"101"},{"size":757,"mtime":1660459080000,"results":"107","hashOfConfig":"101"},{"size":104,"mtime":1660459080000,"results":"108","hashOfConfig":"101"},{"size":145,"mtime":1660459080000,"results":"109","hashOfConfig":"101"},{"size":556,"mtime":1660459080000,"results":"110","hashOfConfig":"101"},{"size":4616,"mtime":1666885628450,"results":"111","hashOfConfig":"101"},{"size":7439,"mtime":1666864754403,"results":"112","hashOfConfig":"101"},{"size":2916,"mtime":1660459080000,"results":"113","hashOfConfig":"101"},{"size":1832,"mtime":1666631551060,"results":"114","hashOfConfig":"101"},{"size":155,"mtime":1660459080000,"results":"115","hashOfConfig":"101"},{"size":396,"mtime":1666865134532,"results":"116","hashOfConfig":"101"},{"size":598,"mtime":1660459080000,"results":"117","hashOfConfig":"101"},{"size":2432,"mtime":1660459080000,"results":"118","hashOfConfig":"101"},{"size":2024,"mtime":1666865130976,"results":"119","hashOfConfig":"101"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"efudjq",{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},"1l0ej4u",{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"165"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"165"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"165"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"208"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jazvy",{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/sergi/Desktop/examples/med-chain-master/client/src/index.js",[],"/home/sergi/Desktop/examples/med-chain-master/client/src/App.jsx",[],"/home/sergi/Desktop/examples/med-chain-master/client/src/routes.js",["247"],"// Guards\nimport Layout from './components/layouts/Layout'\nimport AlertPopup from './components/layouts/AlertPopup'\n\n// Pages\nimport Home from './pages'\nimport Patient from './pages/patient'\nimport Doctor from './pages/doctor'\nimport HeaderAppBar from './components/layouts/Layout'\n\nconst routes = [\n  {\n    path: '/',\n    children: [\n      {\n        path: '',\n        element: (\n          <>\n            <AlertPopup />\n            <Home />\n          </>\n        ),\n      },\n      {\n        path: 'patient',\n        element: (\n          <>\n            <HeaderAppBar />\n            <AlertPopup />\n            <Patient />\n          </>\n        ),\n      },\n      {\n        path: 'doctor',\n        element: (\n          <>\n            <HeaderAppBar />\n            <AlertPopup />\n            <Doctor />\n          </>\n        ),\n      },\n    ],\n  },\n]\n\nexport default routes\n","/home/sergi/Desktop/examples/med-chain-master/client/src/contexts/AlertContext/AlertContext.js",[],"/home/sergi/Desktop/examples/med-chain-master/client/src/contexts/EthContext/index.js",[],"/home/sergi/Desktop/examples/med-chain-master/client/src/components/layouts/Layout.jsx",[],"/home/sergi/Desktop/examples/med-chain-master/client/src/components/layouts/AlertPopup.jsx",[],"/home/sergi/Desktop/examples/med-chain-master/client/src/contexts/EthContext/EthContext.js",[],"/home/sergi/Desktop/examples/med-chain-master/client/src/contexts/EthContext/useEth.js",[],"/home/sergi/Desktop/examples/med-chain-master/client/src/contexts/EthContext/state.js",[],"/home/sergi/Desktop/examples/med-chain-master/client/src/pages/index.jsx",["248","249","250"],"import { Box, Typography, Backdrop, CircularProgress, Divider } from '@mui/material'\nimport React from 'react'\nimport AccountBalanceWalletRoundedIcon from '@mui/icons-material/AccountBalanceWalletRounded'\nimport VideoCover from 'react-video-cover'\nimport BackgroundVideo from '../assets/BackgroundVideo.mp4'\nimport logo from '../assets/tealNoBG-cropped.png'\nimport useEth from '../contexts/EthContext/useEth'\nimport PersonAddAlt1RoundedIcon from '@mui/icons-material/PersonAddAlt1Rounded'\nimport CustomButton from '../components/CustomButton'\nimport { useNavigate } from 'react-router-dom'\nimport LoginRoundedIcon from '@mui/icons-material/LoginRounded'\nimport { grey } from '@mui/material/colors'\nimport '../App.css'\n\nconst Home = () => {\n  const {\n    state: { contract, accounts, role, loading },\n    dispatch,\n  } = useEth()\n  const navigate = useNavigate()\n\n  const registerDoctor = async () => {\n    try {\n      await contract.methods.addDoctor().send({ from: accounts[0] })\n      dispatch({\n        type: 'ADD_DOCTOR',\n      })\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const ActionSection = () => {\n    if (!accounts) {\n      return (\n        <Typography variant='h5' color='white'>\n          Open your MetaMask wallet to get connected, then refresh this page\n        </Typography>\n      )\n    } else {\n      if (role === 'unknown') {\n        return (\n          <Box display='flex' flexDirection='column' alignItems='center'>\n            <Box mb={2}>\n              <CustomButton text='Doctor Register' handleClick={() => registerDoctor()}>\n                <PersonAddAlt1RoundedIcon style={{ color: 'white' }} />\n              </CustomButton>\n            </Box>\n            <Typography variant='h5' color='white'>\n              If you are a patient, ask your doctor to register for you\n            </Typography>\n          </Box>\n        )\n      } else if (role === 'patient') {\n        return (\n          <CustomButton text='Patient Portal' handleClick={() => navigate('/patient')}>\n            <LoginRoundedIcon style={{ color: 'white' }} />\n          </CustomButton>\n        )\n      } else if (role === 'doctor') {\n        return (\n          <CustomButton text='Doctor Portal' handleClick={() => navigate('/doctor')}>\n            <LoginRoundedIcon style={{ color: 'white' }} />\n          </CustomButton>\n        )\n      }\n    }\n  }\n\n  if (loading) {\n    return (\n      <Backdrop sx={{ color: '#fff', zIndex: theme => theme.zIndex.drawer + 1 }} open={loading}>\n        <CircularProgress color='inherit' />\n      </Backdrop>\n    )\n  } else {\n    return (\n      <Box\n        display='flex'\n        flexDirection='column'\n        justifyContent='center'\n        alignItems='center'\n        width='100vw'\n        height='100vh'\n        id='background'\n      >\n        <Box\n          style={{\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            overflow: 'hidden',\n            top: 0,\n            left: 0,\n            zIndex: -1,\n          }}\n        >\n          <VideoCover\n            videoOptions={{\n              src: BackgroundVideo,\n              autoPlay: true,\n              loop: true,\n              muted: true,\n            }}\n          />\n        </Box>\n        <Box id='home-page-box' display='flex' flexDirection='column' justifyContent='center' alignItems='center' p={5}>\n          <img src={logo} alt='med-chain-logo' style={{ height: 50 }} />\n          <Box mt={2} mb={5}>\n            <Typography variant='h4' color='white'>\n              Own Your Health\n            </Typography>\n          </Box>\n          <ActionSection />\n          <Box display='flex' alignItems='center' mt={2}>\n            <Typography variant='h5' color='white'>\n              powered by{' '}\n            </Typography>\n            <Box mx={1}>\n              <img\n                src='https://cdn.worldvectorlogo.com/logos/ethereum-1.svg'\n                alt='Ethereum logo vector'\n                style={{ height: 20 }}\n              ></img>\n            </Box>\n            <img\n              src='https://upload.wikimedia.org/wikipedia/commons/1/18/Ipfs-logo-1024-ice-text.png'\n              alt='Ethereum logo vector'\n              style={{ height: 20 }}\n            ></img>\n          </Box>\n        </Box>\n      </Box>\n    )\n  }\n}\n\nexport default Home\n","/home/sergi/Desktop/examples/med-chain-master/client/src/pages/patient/index.jsx",[],"/home/sergi/Desktop/examples/med-chain-master/client/src/pages/doctor/index.jsx",["251"],"import { Box, Divider, FormControl, Modal, TextField, Typography, Backdrop, CircularProgress } from '@mui/material'\nimport React, { useCallback } from 'react'\nimport { useState } from 'react'\nimport CustomButton from '../../components/CustomButton'\nimport SearchRoundedIcon from '@mui/icons-material/SearchRounded'\nimport useEth from '../../contexts/EthContext/useEth'\nimport PersonAddAlt1RoundedIcon from '@mui/icons-material/PersonAddAlt1Rounded'\nimport useAlert from '../../contexts/AlertContext/useAlert'\nimport AddRecordModal from './AddRecordModal'\nimport CloudUploadRoundedIcon from '@mui/icons-material/CloudUploadRounded'\nimport ipfs from '../../ipfs'\nimport Record from '../../components/Record'\n\nconst Doctor = () => {\n  const {\n    state: { contract, accounts, role, loading },\n  } = useEth()\n  const { setAlert } = useAlert()\n\n  const [patientExist, setPatientExist] = useState(false)\n  const [searchPatientAddress, setSearchPatientAddress] = useState('')\n  const [addPatientAddress, setAddPatientAddress] = useState('')\n  const [records, setRecords] = useState([])\n  const [addRecord, setAddRecord] = useState(false)\n\n  const searchPatient = async () => {\n    try {\n      if (!/^(0x)?[0-9a-f]{40}$/i.test(searchPatientAddress)) {\n        setAlert('Please enter a valid wallet address', 'error')\n        return\n      }\n      const patientExists = await contract.methods.getPatientExists(searchPatientAddress).call({ from: accounts[0] })\n      if (patientExists) {\n        const records = await contract.methods.getRecords(searchPatientAddress).call({ from: accounts[0] })\n        console.log('records :>> ', records)\n        setRecords(records)\n        setPatientExist(true)\n      } else {\n        setAlert('Patient does not exist', 'error')\n      }\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const registerPatient = async () => {\n    try {\n      await contract.methods.addPatient(addPatientAddress).send({ from: accounts[0] })\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const addRecordCallback = useCallback(\n    async (buffer, fileName, patientAddress) => {\n      if (!patientAddress) {\n        setAlert('Please search for a patient first', 'error')\n        return\n      }\n      try {\n        const res = await ipfs.add(buffer)\n        const ipfsHash = res[0].hash\n        if (ipfsHash) {\n          await contract.methods.addRecord(ipfsHash, fileName, patientAddress).send({ from: accounts[0] })\n          setAlert('New record uploaded', 'success')\n          setAddRecord(false)\n\n          // refresh records\n          const records = await contract.methods.getRecords(patientAddress).call({ from: accounts[0] })\n          setRecords(records)\n        }\n      } catch (err) {\n        setAlert('Record upload failed', 'error')\n        console.error(err)\n      }\n    },\n    [addPatientAddress, accounts, contract]\n  )\n\n  if (loading) {\n    return (\n      <Backdrop sx={{ color: '#fff', zIndex: theme => theme.zIndex.drawer + 1 }} open={loading}>\n        <CircularProgress color='inherit' />\n      </Backdrop>\n    )\n  } else {\n    return (\n      <Box display='flex' justifyContent='center' width='100vw'>\n        <Box width='60%' my={5}>\n          {!accounts ? (\n            <Box display='flex' justifyContent='center'>\n              <Typography variant='h6'>Open your MetaMask wallet to get connected, then refresh this page</Typography>\n            </Box>\n          ) : (\n            <>\n              {role === 'unknown' && (\n                <Box display='flex' justifyContent='center'>\n                  <Typography variant='h5'>You're not registered, please go to home page</Typography>\n                </Box>\n              )}\n              {role === 'patient' && (\n                <Box display='flex' justifyContent='center'>\n                  <Typography variant='h5'>Only doctor can access this page</Typography>\n                </Box>\n              )}\n              {role === 'doctor' && (\n                <>\n                  <Modal open={addRecord} onClose={() => setAddRecord(false)}>\n                    <AddRecordModal\n                      handleClose={() => setAddRecord(false)}\n                      handleUpload={addRecordCallback}\n                      patientAddress={searchPatientAddress}\n                    />\n                  </Modal>\n\n                  <Typography variant='h4'>Patient Records</Typography>\n                  <Box display='flex' alignItems='center' my={1}>\n                    <FormControl fullWidth>\n                      <TextField\n                        variant='outlined'\n                        placeholder='Search patient by wallet address'\n                        value={searchPatientAddress}\n                        onChange={e => setSearchPatientAddress(e.target.value)}\n                        InputProps={{ style: { fontSize: '15px' } }}\n                        InputLabelProps={{ style: { fontSize: '15px' } }}\n                        size='small'\n                      />\n                    </FormControl>\n                    <Box mx={2}>\n                      <CustomButton text={'Search'} handleClick={() => searchPatient()}>\n                        <SearchRoundedIcon style={{ color: 'white' }} />\n                      </CustomButton>\n                    </Box>\n                    <CustomButton text={'New Record'} handleClick={() => setAddRecord(true)} disabled={!patientExist}>\n                      <CloudUploadRoundedIcon style={{ color: 'white' }} />\n                    </CustomButton>\n                  </Box>\n\n                  {patientExist && records.length === 0 && (\n                    <Box display='flex' alignItems='center' justifyContent='center' my={5}>\n                      <Typography variant='h5'>No records found</Typography>\n                    </Box>\n                  )}\n\n                  {patientExist && records.length > 0 && (\n                    <Box display='flex' flexDirection='column' mt={3} mb={-2}>\n                      {records.map((record, index) => (\n                        <Box mb={2}>\n                          <Record key={index} record={record} />\n                        </Box>\n                      ))}\n                    </Box>\n                  )}\n\n                  <Box mt={6} mb={4}>\n                    <Divider />\n                  </Box>\n\n                  <Typography variant='h4'>Register Patient</Typography>\n                  <Box display='flex' alignItems='center' my={1}>\n                    <FormControl fullWidth>\n                      <TextField\n                        variant='outlined'\n                        placeholder=' patient by wallet address'\n                        value={addPatientAddress}\n                        onChange={e => setAddPatientAddress(e.target.value)}\n                        InputProps={{ style: { fontSize: '15px' } }}\n                        InputLabelProps={{ style: { fontSize: '15px' } }}\n                        size='small'\n                      />\n                    </FormControl>\n                    <Box mx={2}>\n                      <CustomButton text={'Register'} handleClick={() => registerPatient()}>\n                        <PersonAddAlt1RoundedIcon style={{ color: 'white' }} />\n                      </CustomButton>\n                    </Box>\n                  </Box>\n                </>\n              )}\n            </>\n          )}\n        </Box>\n      </Box>\n    )\n  }\n}\n\nexport default Doctor\n","/home/sergi/Desktop/examples/med-chain-master/client/src/contexts/EthContext/EthProvider.jsx",[],"/home/sergi/Desktop/examples/med-chain-master/client/src/contexts/AlertContext/useAlert.js",[],"/home/sergi/Desktop/examples/med-chain-master/client/src/ipfs.js",[],"/home/sergi/Desktop/examples/med-chain-master/client/src/components/CustomButton.jsx",["252"],"import React from 'react'\nimport { Box, Button, Typography } from '@mui/material'\nimport { grey, teal } from '@mui/material/colors'\n\nconst CustomButton = ({ text, handleClick, disabled = false, children }) => {\n  return (\n    <Button\n      startIcon={children}\n      style={{\n        backgroundColor: disabled ? grey[400] : teal['A700'],\n        textTransform: 'none',\n        padding: '10px 20px',\n      }}\n      onClick={handleClick}\n      disabled={disabled}\n    >\n      <Typography variant='h5' color='white'>\n        {text}\n      </Typography>\n    </Button>\n  )\n}\n\nexport default CustomButton\n","/home/sergi/Desktop/examples/med-chain-master/client/src/components/Record.jsx",["253","254"],"import { Card, CardContent, IconButton, Typography, Grid, Box } from '@mui/material'\nimport React from 'react'\nimport DescriptionRoundedIcon from '@mui/icons-material/DescriptionRounded'\nimport { grey } from '@mui/material/colors'\nimport moment from 'moment'\nimport CloudDownloadRoundedIcon from '@mui/icons-material/CloudDownloadRounded'\nimport { useNavigate } from 'react-router-dom'\n\nconst Record = ({ record }) => {\n  const [cid, name, patientId, doctorId, timestamp] = record\n  const navigate = useNavigate()\n\n  return (\n    <Card>\n      <CardContent>\n        <Grid container spacing={2}>\n          <Grid item xs={1}>\n            <DescriptionRoundedIcon style={{ fontSize: 40, color: grey[700] }} />\n          </Grid>\n          <Grid item xs={3}>\n            <Box display='flex' flexDirection='column'>\n              <Typography variant='h6' color={grey[600]}>\n                Record name\n              </Typography>\n              <Typography variant='h6'>{name}</Typography>\n            </Box>\n          </Grid>\n          <Grid item xs={5}>\n            <Box display='flex' flexDirection='column'>\n              <Typography variant='h6' color={grey[600]}>\n                Doctor\n              </Typography>\n              <Typography variant='h6'>{doctorId}</Typography>\n            </Box>\n          </Grid>\n          <Grid item xs={2}>\n            <Box display='flex' flexDirection='column'>\n              <Typography variant='h6' color={grey[600]}>\n                Created time\n              </Typography>\n              <Typography variant='h6'>{moment.unix(timestamp).format('MM-DD-YYYY HH:mm')}</Typography>\n            </Box>\n          </Grid>\n          <Grid item xs={1}>\n            <a href={`https://med-chain.infura-ipfs.io/ipfs/${cid}`} target='_blank' rel='noopener noreferrer'>\n              <IconButton>\n                <CloudDownloadRoundedIcon fontSize='large' />\n              </IconButton>\n            </a>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default Record\n","/home/sergi/Desktop/examples/med-chain-master/client/src/pages/doctor/AddRecordModal.jsx",[],"/home/sergi/Desktop/crypthospital/client/src/index.js",[],["255","256"],"/home/sergi/Desktop/crypthospital/client/src/App.jsx",[],"/home/sergi/Desktop/crypthospital/client/src/routes.js",["257"],"// Guards\nimport Layout from './components/layouts/Layout'\nimport AlertPopup from './components/layouts/AlertPopup'\n\n// Pages\nimport Home from './pages'\nimport Patient from './pages/patient'\nimport Doctor from './pages/doctor'\nimport HeaderAppBar from './components/layouts/Layout'\n\nconst routes = [\n  {\n    path: '/',\n    children: [\n      {\n        path: '',\n        element: (\n          <>\n            <AlertPopup />\n            <Home />\n          </>\n        ),\n      },\n      {\n        path: 'patient',\n        element: (\n          <>\n            <HeaderAppBar />\n            <Patient />\n            <AlertPopup />\n          </>\n        ),\n      },\n      {\n        path: 'doctor',\n        element: (\n          <>\n            <HeaderAppBar />\n            <Doctor />\n            <AlertPopup />\n          </>\n        ),\n      },\n    ],\n  },\n]\n\nexport default routes\n","/home/sergi/Desktop/crypthospital/client/src/contexts/AlertContext/AlertContext.js",[],"/home/sergi/Desktop/crypthospital/client/src/contexts/EthContext/index.js",[],"/home/sergi/Desktop/crypthospital/client/src/components/layouts/AlertPopup.jsx",[],"/home/sergi/Desktop/crypthospital/client/src/components/layouts/Layout.jsx",[],"/home/sergi/Desktop/crypthospital/client/src/contexts/EthContext/EthContext.js",[],"/home/sergi/Desktop/crypthospital/client/src/contexts/EthContext/useEth.js",[],"/home/sergi/Desktop/crypthospital/client/src/contexts/EthContext/state.js",[],"/home/sergi/Desktop/crypthospital/client/src/pages/index.jsx",["258","259","260"],"import { Box, Typography, Backdrop, CircularProgress, Divider } from '@mui/material'\nimport React from 'react'\nimport AccountBalanceWalletRoundedIcon from '@mui/icons-material/AccountBalanceWalletRounded'\nimport VideoCover from 'react-video-cover'\nimport BackgroundVideo from '../assets/video1.mp4'\nimport logo_snake from '../assets/kt_1.png'\nimport logo_title from '../assets/medeth.png'\nimport react_logo from '../assets/logo.svg'\nimport useEth from '../contexts/EthContext/useEth'\nimport PersonAddAlt1RoundedIcon from '@mui/icons-material/PersonAddAlt1Rounded'\nimport CustomButton from '../components/CustomButton'\nimport { useNavigate } from 'react-router-dom'\nimport LoginRoundedIcon from '@mui/icons-material/LoginRounded'\nimport { grey } from '@mui/material/colors'\nimport '../App.css'\n\nconst Home = () => {\n  const {\n    state: { contract, accounts, role, loading },\n    dispatch,\n  } = useEth()\n  const navigate = useNavigate()\n\n  const registerDoctor = async () => {\n    try {\n      await contract.methods.addDoctor().send({ from: accounts[0] })\n      dispatch({\n        type: 'ADD_DOCTOR',\n      })\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const ActionSection = () => {\n    if (!accounts) {\n      return (\n        <Typography variant='h5' color='white'>\n          Open your MetaMask wallet to get connected, then refresh this page\n        </Typography>\n      )\n    } else {\n      if (role === 'unknown') {\n        return (\n          <Box display='flex' flexDirection='column' alignItems='center'>\n            <Box mb={2}>\n              <CustomButton text='Doctor Register' handleClick={() => registerDoctor()}>\n                <PersonAddAlt1RoundedIcon style={{ color: 'white' }} />\n              </CustomButton>\n            </Box>\n            <Typography variant='h5' color='white'>\n              If you are a patient, ask your doctor to register for you\n            </Typography>\n          </Box>\n        )\n      } else if (role === 'patient') {\n        return (\n          <CustomButton text='Patient Portal' handleClick={() => navigate('/patient')}>\n            <LoginRoundedIcon style={{ color: 'white' }} />\n          </CustomButton>\n        )\n      } else if (role === 'doctor') {\n        return (\n          <CustomButton text='Doctor Portal' handleClick={() => navigate('/doctor')}>\n            <LoginRoundedIcon style={{ color: 'white' }} />\n          </CustomButton>\n        )\n      }\n    }\n  }\n\n  if (loading) {\n    return (\n      <Backdrop sx={{ color: '#fff', zIndex: theme => theme.zIndex.drawer + 1 }} open={loading}>\n        <CircularProgress color='inherit' />\n      </Backdrop>\n    )\n  } else {\n    return (\n      <Box\n        display='flex'\n        flexDirection='column'\n        justifyContent='center'\n        alignItems='center'\n        width='100vw'\n        height='100vh'\n        id='background'\n      >\n        <Box\n          style={{\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            overflow: 'hidden',\n            top: 0,\n            left: 0,\n            zIndex: -1,\n          }}\n        >\n          <VideoCover\n            videoOptions={{\n              src: BackgroundVideo,\n              autoPlay: true,\n              loop: true,\n              muted: true,\n            }}\n          />\n        </Box>\n        <Box id='home-page-box' display='flex' flexDirection='column' justifyContent='center' alignItems='center' p={5}>\n          <img src={logo_snake} alt='medeth-logo1' style={{ width:300,height: 300}} />\n          <img src={logo_title} alt='medeth-logo2' style={{ }} />\n          <Box mt={2} mb={5}>\n            <Typography variant='h4' color='white'>\n              We protect your data and your health\n            </Typography>\n          </Box>\n          <ActionSection />\n          <Box display='flex' alignItems='center' mt={2}>\n            <Typography variant='h5' color='white'>\n              powered by{' '}\n            </Typography>\n            <Box>\n              <img src={react_logo} alt='react_logo' style={{ height: 22 }}></img>\n            </Box>\n            <Box mr={1} ml={0.3}>\n              <img\n                src='https://cdn.worldvectorlogo.com/logos/ethereum-1.svg'\n                alt='Ethereum logo vector'\n                style={{ height: 20 }}\n              ></img>\n            </Box>\n            <img\n              src='https://upload.wikimedia.org/wikipedia/commons/1/18/Ipfs-logo-1024-ice-text.png'\n              alt='Ethereum logo vector'\n              style={{ height: 20 }}\n            ></img>\n          </Box>\n        </Box>\n      </Box>\n    )\n  }\n}\n\nexport default Home\n","/home/sergi/Desktop/crypthospital/client/src/pages/patient/index.jsx",[],"/home/sergi/Desktop/crypthospital/client/src/pages/doctor/index.jsx",["261"],"import { Box, Divider, FormControl, Modal, TextField, Typography, Backdrop, CircularProgress } from '@mui/material'\nimport React, { useCallback } from 'react'\nimport { useState } from 'react'\nimport CustomButton from '../../components/CustomButton'\nimport SearchRoundedIcon from '@mui/icons-material/SearchRounded'\nimport useEth from '../../contexts/EthContext/useEth'\nimport PersonAddAlt1RoundedIcon from '@mui/icons-material/PersonAddAlt1Rounded'\nimport useAlert from '../../contexts/AlertContext/useAlert'\nimport AddRecordModal from './AddRecordModal'\nimport CloudUploadRoundedIcon from '@mui/icons-material/CloudUploadRounded'\nimport ipfs from '../../ipfs'\nimport Record from '../../components/Record'\n\nconst Doctor = () => {\n  const {\n    state: { contract, accounts, role, loading },\n  } = useEth()\n  const { setAlert } = useAlert()\n\n  const [patientExist, setPatientExist] = useState(false)\n  const [searchPatientAddress, setSearchPatientAddress] = useState('')\n  const [addPatientAddress, setAddPatientAddress] = useState('')\n  const [records, setRecords] = useState([])\n  const [addRecord, setAddRecord] = useState(false)\n\n  const searchPatient = async () => {\n    try {\n      if (!/^(0x)?[0-9a-f]{40}$/i.test(searchPatientAddress)) {\n        setAlert('Please enter a valid wallet address', 'error')\n        return\n      }\n      const patientExists = await contract.methods.getPatientExists(searchPatientAddress).call({ from: accounts[0] })\n      if (patientExists) {\n        const records = await contract.methods.getRecords(searchPatientAddress).call({ from: accounts[0] })\n        console.log('records :>> ', records)\n        setRecords(records)\n        setPatientExist(true)\n      } else {\n        setAlert('Patient does not exist or address does not match', 'error')\n      }\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const registerPatient = async () => {\n    try {\n      await contract.methods.addPatient(addPatientAddress).send({ from: accounts[0] })\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const addRecordCallback = useCallback(\n    async (buffer, fileName, patientAddress) => {\n      if (!patientAddress) {\n        setAlert('Please search for a patient first', 'error')\n        return\n      }\n      try {\n        const res = await ipfs.add(buffer)\n        const ipfsHash = res[0].hash\n        if (ipfsHash) {\n          await contract.methods.addRecord(ipfsHash, fileName, patientAddress).send({ from: accounts[0] })\n          setAlert('New record uploaded', 'success')\n          setAddRecord(false)\n\n          // refresh records\n          const records = await contract.methods.getRecords(patientAddress).call({ from: accounts[0] })\n          setRecords(records)\n        }\n      } catch (err) {\n        setAlert('Record upload failed', 'error')\n        console.error(err)\n      }\n    },\n    [addPatientAddress, accounts, contract]\n  )\n\n  if (loading) {\n    return (\n      <Backdrop sx={{ color: '#fff', zIndex: theme => theme.zIndex.drawer + 1 }} open={loading}>\n        <CircularProgress color='inherit' />\n      </Backdrop>\n    )\n  } else {\n    return (\n      <Box display='flex' justifyContent='center' width='100vw'>\n        <Box width='60%' my={5}>\n          {!accounts ? (\n            <Box display='flex' justifyContent='center'>\n              <Typography variant='h6'>Open your MetaMask wallet to get connected, then refresh this page</Typography>\n            </Box>\n          ) : (\n            <>\n              {role === 'unknown' && (\n                <Box display='flex' justifyContent='center'>\n                  <Typography variant='h5'>You're not registered, please go to home page</Typography>\n                </Box>\n              )}\n              {role === 'patient' && (\n                <Box display='flex' justifyContent='center'>\n                  <Typography variant='h5'>Only doctor can access this page</Typography>\n                </Box>\n              )}\n              {role === 'doctor' && (\n                <>\n                  <Modal open={addRecord} onClose={() => setAddRecord(false)}>\n                    <AddRecordModal\n                      handleClose={() => setAddRecord(false)}\n                      handleUpload={addRecordCallback}\n                      patientAddress={searchPatientAddress}\n                    />\n                  </Modal>\n\n                  <Typography variant='h4'>Patient Records</Typography>\n                  <Box display='flex' alignItems='center' my={1}>\n                    <FormControl fullWidth>\n                      <TextField\n                        variant='outlined'\n                        placeholder='Search patient by wallet address'\n                        value={searchPatientAddress}\n                        onChange={e => setSearchPatientAddress(e.target.value)}\n                        InputProps={{ style: { fontSize: '15px' } }}\n                        InputLabelProps={{ style: { fontSize: '15px' } }}\n                        size='small'\n                      />\n                    </FormControl>\n                    <Box mx={2}>\n                      <CustomButton text={'Search'} handleClick={() => searchPatient()}>\n                        <SearchRoundedIcon style={{ color: 'white' }} />\n                      </CustomButton>\n                    </Box>\n                    <CustomButton text={'New Record'} handleClick={() => setAddRecord(true)} disabled={!patientExist}>\n                      <CloudUploadRoundedIcon style={{ color: 'white' }} />\n                    </CustomButton>\n                  </Box>\n\n                  {patientExist && records.length === 0 && (\n                    <Box display='flex' alignItems='center' justifyContent='center' my={5}>\n                      <Typography variant='h5'>No records found</Typography>\n                    </Box>\n                  )}\n\n                  {patientExist && records.length > 0 && (\n                    <Box display='flex' flexDirection='column' mt={3} mb={-2}>\n                      {records.map((record, index) => (\n                        <Box mb={2}>\n                          <Record key={index} record={record} />\n                        </Box>\n                      ))}\n                    </Box>\n                  )}\n\n                  <Box mt={6} mb={4}>\n                    <Divider />\n                  </Box>\n\n                  <Typography variant='h4'>Register Patient</Typography>\n                  <Box display='flex' alignItems='center' my={1}>\n                    <FormControl fullWidth>\n                      <TextField\n                        variant='outlined'\n                        placeholder=' patient by wallet address'\n                        value={addPatientAddress}\n                        onChange={e => setAddPatientAddress(e.target.value)}\n                        InputProps={{ style: { fontSize: '15px' } }}\n                        InputLabelProps={{ style: { fontSize: '15px' } }}\n                        size='small'\n                      />\n                    </FormControl>\n                    <Box mx={2}>\n                      <CustomButton text={'Register'} handleClick={() => registerPatient()}>\n                        <PersonAddAlt1RoundedIcon style={{ color: 'white' }} />\n                      </CustomButton>\n                    </Box>\n                  </Box>\n                </>\n              )}\n            </>\n          )}\n        </Box>\n      </Box>\n    )\n  }\n}\n\nexport default Doctor\n","/home/sergi/Desktop/crypthospital/client/src/contexts/EthContext/EthProvider.jsx",[],"/home/sergi/Desktop/crypthospital/client/src/contexts/AlertContext/useAlert.js",[],"/home/sergi/Desktop/crypthospital/client/src/ipfs.js",[],"/home/sergi/Desktop/crypthospital/client/src/components/CustomButton.jsx",["262"],"/home/sergi/Desktop/crypthospital/client/src/components/Record.jsx",["263","264"],"/home/sergi/Desktop/crypthospital/client/src/pages/doctor/AddRecordModal.jsx",[],"/home/sergi/Desktop/crypthospital/client/src/components/UserCard.jsx",["265"],"import React from 'react'\nimport { render } from 'react-dom';\nimport { useModal } from 'react-hooks-use-modal';\n\nconst UserCard = ({ photo, name, role, address,   }) => {\n\n    const [Modal, open, close, isOpen] = useModal('root', {\n        preventScroll: true,\n        closeOnOverlayClick: false\n    });\n\n    return (\n        <div>\n          <button onClick={open}>OPEN</button>\n          <Modal>\n            <div>\n              <h1>Title</h1>\n              <p>This is a customizable modal.</p>\n              <button onClick={close}>CLOSE</button>\n            </div>\n          </Modal>\n        </div>\n      )\n}\n\nrender(<UserCard />, document.getElementById('root'))\nexport default UserCard",["266","267"],"/home/sergi/Desktop/medeth/client/src/index.js",[],"/home/sergi/Desktop/medeth/client/src/App.jsx",[],"/home/sergi/Desktop/medeth/client/src/routes.js",["268"],"/home/sergi/Desktop/medeth/client/src/contexts/AlertContext/AlertContext.js",[],"/home/sergi/Desktop/medeth/client/src/contexts/EthContext/index.js",[],"/home/sergi/Desktop/medeth/client/src/components/layouts/Layout.jsx",[],"/home/sergi/Desktop/medeth/client/src/components/layouts/AlertPopup.jsx",[],"/home/sergi/Desktop/medeth/client/src/contexts/EthContext/EthContext.js",[],"/home/sergi/Desktop/medeth/client/src/contexts/EthContext/useEth.js",[],"/home/sergi/Desktop/medeth/client/src/contexts/EthContext/state.js",[],"/home/sergi/Desktop/medeth/client/src/pages/index.jsx",["269","270","271"],"/home/sergi/Desktop/medeth/client/src/pages/doctor/index.jsx",["272"],"/home/sergi/Desktop/medeth/client/src/pages/patient/index.jsx",[],"/home/sergi/Desktop/medeth/client/src/contexts/EthContext/EthProvider.jsx",[],"/home/sergi/Desktop/medeth/client/src/contexts/AlertContext/useAlert.js",[],"/home/sergi/Desktop/medeth/client/src/ipfs.js",[],"/home/sergi/Desktop/medeth/client/src/components/CustomButton.jsx",["273"],"/home/sergi/Desktop/medeth/client/src/pages/doctor/AddRecordModal.jsx",[],"/home/sergi/Desktop/medeth/client/src/components/Record.jsx",["274","275"],{"ruleId":"276","severity":1,"message":"277","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":14},{"ruleId":"276","severity":1,"message":"280","line":1,"column":55,"nodeType":"278","messageId":"279","endLine":1,"endColumn":62},{"ruleId":"276","severity":1,"message":"281","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":39},{"ruleId":"276","severity":1,"message":"282","line":12,"column":10,"nodeType":"278","messageId":"279","endLine":12,"endColumn":14},{"ruleId":"283","severity":1,"message":"284","line":77,"column":5,"nodeType":"285","endLine":77,"endColumn":44,"suggestions":"286"},{"ruleId":"276","severity":1,"message":"287","line":2,"column":10,"nodeType":"278","messageId":"279","endLine":2,"endColumn":13},{"ruleId":"276","severity":1,"message":"288","line":10,"column":21,"nodeType":"278","messageId":"279","endLine":10,"endColumn":30},{"ruleId":"276","severity":1,"message":"289","line":11,"column":9,"nodeType":"278","messageId":"279","endLine":11,"endColumn":17},{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"276","severity":1,"message":"277","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":14},{"ruleId":"276","severity":1,"message":"280","line":1,"column":55,"nodeType":"278","messageId":"279","endLine":1,"endColumn":62},{"ruleId":"276","severity":1,"message":"281","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":39},{"ruleId":"276","severity":1,"message":"282","line":14,"column":10,"nodeType":"278","messageId":"279","endLine":14,"endColumn":14},{"ruleId":"283","severity":1,"message":"284","line":77,"column":5,"nodeType":"285","endLine":77,"endColumn":44,"suggestions":"294"},{"ruleId":"276","severity":1,"message":"287","line":2,"column":10,"nodeType":"278","messageId":"279","endLine":2,"endColumn":13},{"ruleId":"276","severity":1,"message":"288","line":10,"column":21,"nodeType":"278","messageId":"279","endLine":10,"endColumn":30},{"ruleId":"276","severity":1,"message":"289","line":11,"column":9,"nodeType":"278","messageId":"279","endLine":11,"endColumn":17},{"ruleId":"276","severity":1,"message":"295","line":7,"column":32,"nodeType":"278","messageId":"279","endLine":7,"endColumn":38},{"ruleId":"290","replacedBy":"296"},{"ruleId":"292","replacedBy":"297"},{"ruleId":"276","severity":1,"message":"277","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":14},{"ruleId":"276","severity":1,"message":"280","line":1,"column":55,"nodeType":"278","messageId":"279","endLine":1,"endColumn":62},{"ruleId":"276","severity":1,"message":"281","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":39},{"ruleId":"276","severity":1,"message":"282","line":14,"column":10,"nodeType":"278","messageId":"279","endLine":14,"endColumn":14},{"ruleId":"283","severity":1,"message":"284","line":77,"column":5,"nodeType":"285","endLine":77,"endColumn":44,"suggestions":"298"},{"ruleId":"276","severity":1,"message":"287","line":2,"column":10,"nodeType":"278","messageId":"279","endLine":2,"endColumn":13},{"ruleId":"276","severity":1,"message":"288","line":10,"column":21,"nodeType":"278","messageId":"279","endLine":10,"endColumn":30},{"ruleId":"276","severity":1,"message":"289","line":11,"column":9,"nodeType":"278","messageId":"279","endLine":11,"endColumn":17},"no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.","'AccountBalanceWalletRoundedIcon' is defined but never used.","'grey' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'setAlert'. Either include it or remove the dependency array.","ArrayExpression",["299"],"'Box' is defined but never used.","'patientId' is assigned a value but never used.","'navigate' is assigned a value but never used.","no-native-reassign",["300"],"no-negated-in-lhs",["301"],["302"],"'isOpen' is assigned a value but never used.",["300"],["301"],["303"],{"desc":"304","fix":"305"},"no-global-assign","no-unsafe-negation",{"desc":"304","fix":"306"},{"desc":"304","fix":"307"},"Update the dependencies array to be: [setAlert, contract.methods, accounts]",{"range":"308","text":"309"},{"range":"310","text":"309"},{"range":"311","text":"309"},[2816,2855],"[setAlert, contract.methods, accounts]",[2842,2881],[2842,2881]]